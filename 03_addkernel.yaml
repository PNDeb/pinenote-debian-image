{{- $architecture := or .architecture "arm64" -}}
{{- $prevtargz := .prevtargz }}
{{- $targz := .targz }}

architecture: {{ $architecture }}

actions:
  - action: unpack
    file: {{ $prevtargz }}

  - action: apt
    recommends: false
    description: Install dracut, u-boot-tools
    packages:
      # - dracut
      # - dracut-core
      - u-boot-tools
      - python3-numpy # required for the python script that trims the A2 waveform
      - mesa-utils # contains eglinfo, which is used to keep the gpu alive on boot
      - libubootenv-tool # required to modify the u-boot environment
      - imagemagick # required to render/convert png files for the u-boot logo partition

  - action: overlay
    description: Install etc/ overlays
    source: overlays/etc/
    destination: /etc/

  - action: overlay
    description: Install wip tools to generate u-boot logos (and partition image)
    source: custom_logos_uboot/
    destination: /root/custom_logos_uboot/

  # - action: run
  #   description: Add u-boot environment partition to fstab
  #   chroot: true
  #   run:

  - action: overlay
    description: modprobe.d
    source: overlays/modprobe.d/
    destination: /etc/modprobe.d/

  - action: overlay
    description: Copy kernel files to /root/kernel
    source: overlays/kernel/
    destination: /root/kernel/

  - action: overlay
    description: Copy default configurations (like u-boot)
    source: overlays/default/
    destination: /etc/default/

  - action: overlay
    description: Install off-/suspend-screen data
    source: overlays/off_and_suspend_screen/
    destination: /etc/off_and_suspend_screen/

  - action: run
    description: Create rockchip firmware directory
    chroot: true
    command: mkdir /lib/firmware/rockchip/

  - action: run
    description: Copy offscreen image
    chroot: true
    command: cp /etc/off_and_suspend_screen/pine64.bin /lib/firmware/rockchip/rockchip_ebc_default_screen.bin

  - action: run
    description: Install all kernel-related .deb packages
    chroot: true
    command: dpkg -i /root/kernel/*.deb

  - action: apt
    recommends: false
    description: Install base programs
    packages:
      - initramfs-tools

  - action: run
    description: Generate initrd
    chroot: true
    command: update-initramfs -c -k all

  - action: run
    description: Update exlinux.conf for uboot
    chroot: true
    command: u-boot-update

  # fix for the stock-uboot?
  - action: run
    description: Create symlink from /boot/extlinux/extlinux.conf to /boot/extlinux.conf
    chroot: true
    command: ln -s /boot/extlinux/extlinux.conf /boot/extlinux.conf

  - action: run
    description: Clean up kernel-deb files
    chroot: true
    command: rm /root/kernel/*.deb

  # - action: overlay
  #   description: Copy kernel, dtb, extlinux.conf into /boot
  #   source: overlays/boot/
  #   destination: /extlinux/

  - action: overlay
    description: Copy parse-android-dynparts (for legacy/debug purposes)
    source: overlays/root/
    destination: /root/

  # - action: overlay
  #   description: Configuration for dracut
  #   source: overlays/dracut/
  #   destination: /etc/

      # This method destroys the symbolic link /lib -> /usr/lib.
      # - action: unpack
      #   description: Unpack and copy the kernel modules
      #   file: overlays/modules/kernel-modules.tar.gz

  # - action: run
  #   description: Unpack and copy the kernel modules
  #   command: tar xf ${RECIPEDIR}/overlays/modules/kernel-modules.tar.gz -C ${ROOTDIR}/usr/

  # - action: run
  #   description: Untar and copy original firmware
  #   command: tar xzf ${RECIPEDIR}/overlays/firmware/original-firmware.tar.gz -C ${ROOTDIR}/usr/lib/

  # - action: run
  #   description: Copy the waveform
  #   command: cp ${RECIPEDIR}/overlays/firmware/waveform.bin ${ROOTDIR}/usr/lib/firmware/

  # - action: run
  #   command: mkdir ${ROOTDIR}/usr/lib/firmware/rockchip

  #     # for the smaeul's kernel tree
  # - action: run
  #   command: cp ${RECIPEDIR}/overlays/firmware/waveform.bin ${ROOTDIR}/usr/lib/firmware/rockchip/ebc.wbf

  # - action: run
  #   description: Prepare brcm firmware files
  #   chroot: true
  #   script: scripts/setup-brcm-firmware.sh /usr/lib/firmware/
  - action: run
    description: Prepare u-boot emergency kernel files in /boot/emergency
    chroot: true
    script: scripts/kernel_prepare_emergency_files.sh

  - action: apt
    recommends: false
    description: Install new kernel from repository
    packages:
      - linux-image-pinenote-testing


  - action: pack
    file: {{ $targz }}

